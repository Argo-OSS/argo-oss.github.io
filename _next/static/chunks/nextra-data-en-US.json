{"/2023/activites/reports/fianlReportKo":{"title":"Fianlreportko","data":{"":"","️-팀-소개#☑️ 팀 소개":"ArgoWorkflows OSS 2023팀은 1명의 멘토와, 17명의 멘티의 구성으로 총 18명이 한 팀으로 활동하였습니다.오픈소스에 대한 진입장벽을 느끼는 주니어 개발자들과 선배 개발자가 함께 힘을 모아 컨트리뷰션을 하는 멋진 행사인\n오픈소스 컨트리뷰션 아카데미의 도움으로 팀이 구성되었으며, 2023년 07월 ~ 10월까지 약 4개월 간 활동하였습니다.Git 사용법이 익숙하지 않았던 걸음마 단계부터 시작해서, 어엿한 오픈소스 컨트리뷰터가 될 때까지 저희팀이 이룬 성과를 공유합니다.","️-argoworkflows-소개#☑️ ArgoWorkflows 소개":"Argo Workflows는 컨테이너를 기반으로 한 워크플로우 엔진으로, 병렬 작업을 쿠버네티스에서 실행할 수 있는 오픈소스 프로젝트입니다.\n각 워크플로우 단계가 컨테이너로 정의되며, 여러 단계의 워크플로우를 일련의 작업으로 모델링하거나, 작업 간의 종속성을 DAG (Directed Acyclic Graph)를 사용하여 실행할 수 있습니다.즉, Argo Workflows를 사용하면 간단한 워크플로 형태의 작업 부터, 머신러닝 또는 데이터 처리를 위한 복잡한 작업 까지 쿠버네티스에서 더 빠르고 쉽게 수행할 수 있게 됩니다.\n\nArgo Workflows는 Cloud Native Computing Foundation (CNCF)에서 졸업에 성공한 프로젝트입니다.졸업 프로젝트가 되기 위해선 엄격한 표준을 충족하기 위해 CNCF가 실시하는 모든 테스트를 통과해야 합니다.\n즉, 졸업 프로젝트로 인정 받았다는 것은 Argo가 명확한 거버넌스 및 커미터 프로세스, 건전한 성장, 보안 및 컴플라이언스 준수에 대한 최고 수준을 충족한다는 것을 의미합니다.\n그 엄격한 기준으로 인해 CNCF에 등록된 프로젝트 중 졸업에 성공한 프로젝트는 약 13%에 불과합니다.실제로 Argo 프로젝트가 졸업 프로젝트로 인정 받기까지 약 5년이라는 기간동안 7000명이 넘는 컨트리뷰터와 11000개가 넘는 PR, 37만이 넘는 컨트리뷰션이 필요했습니다.뿐만 아니라, Argo 프로젝트는 현재에도 2300여개의 회사들이 코드에 기여하고 있고 8300여명이 코드에 컨트리뷰트 하고 있는 매우 활발하고 최신화된 오픈소스입니다.이로 인해 Argo Workflows는 클라우드 네이티브 커뮤니티에서 가장 대표적인 워크플로우 엔진으로 인정받고 있습니다.전 세계적으로 수 많은 기업들이 공식적으로 Argo Workflows를 도입해 사용하고 있습니다.\n이는 Argo Workflows가 큰 규모의 기업에서도 실제 작업 부하의 문제를 해결 할 수 있다는 강력한 증거입니다.Argo Workflows를 사용하는 대표적인 기업들은 다음과 같습니다.\n\n… 외 200개가 넘는 글로벌 기업들Argo Workflows와 비슷한 도구로는 Apache Airflow, Tekton, Prefect 등이 있습니다.Argo Workflows는 Kubernetes-native 엔진으로, 컨테이너 기반 워크플로우를 쉽게 조정하고 자원을 관리할 수 있습니다.\n이는 비슷한 도구인 Apache Airflow와 비교했을 때 주요한 차이점 중 하나로, Apache Airflow는 독립 실행 애플리케이션이며, Kubernetes의 기능을 본질적으로 활용하지 않습니다.\n따라서 Airflow는 자원 관리와 확장성이 Argo Workflows보다 더 어려울 수 있습니다.또한, Argo Workflows는 각 워크플로우 단계를 독립적인 컨테이너로 실행하기 때문에, 데이터 파이프라인 뿐만 아니라 CI/CD와 같은 다양한 작업을 수행할 수 있습니다.\n이는 Docker와 Kubernetes의 강력함을 활용하여 가능한 것이며, 이를 통해 제한 없이 어떤 것이든 실행할 수 있습니다.\n\nArgo Worflows 아키텍처의 간단한 다이어그램은 다음과 같습니다.\nArgo Workflows는 크게 두가지 컴포넌트로 나뉘어지는데, Workflow Controller와 Argo Server 입니다.\n전자는 워크플로가 실행되기 위해 필요한 모든 작업을 수행하고 후자는 Web Page나 Cli에서 정보를 확인할 수 있는 API를 제공합니다.","️-주요-성과#☑️ 주요 성과":"","uiux-개선#UI/UX 개선":"Argo Workflows 프로젝트는 기여의 메인 키워드를 UI/UX개선으로 지정하고 따로 프로젝트 페이지를 운영하며 이슈들을 트레킹 할 정도로 해당 주제에 적극적인 기여를 진행하고 있습니다.\n\n저희 팀도 이러한 프로젝트의 목표를 따라 많은 UI 개선들을 수행했습니다.\n주요 개선 항목\n\nworkflows 검색 기능\ncronworkflows의 요약 view 개선\nDataPciker의 개선\nworkflows control패널의 sticky 옵션\nworkflows 목록의 label 강조 효과\n외 다양한 버그 개선","핵심-기능-개선#핵심 기능 개선":"컨트리뷰션 경험이 쌓이기 시작하면서 프로젝트에 대한 멤버들의 이해도가 올라가고, 자신감이 붙으면서 UI/UX에 관한 개선 뿐 아니라, 워크플로우 엔진의 코어한 기능에 대한 기여들도 점차 할 수 있게 었습니다.What’s new in Argo Workflows v3.5워크플로우 엔진의 핵심 로직은 쿠버네티스의 CRD로 설치되어 쿠버네티스 클러스터의 동작과 성능에도 크게 영향을 주는 만큼 구현 수준이 높고,\n각종 테스트 및 메인테이너들과의 정책에 관한 논의에도 적극적으로 참여할 수 있어야 기여가 가능한 만큼 컨트리뷰션 난이도도 굉장히 높은 기여에 속합니다.쉽지 않은 과정들이었지만, 저희 팀은 Argo Workflows 3.5버전의 릴리즈에 핵심적인 기여들을 해내는데 성공하며,\nTemplate Spec, Authentication, Controller 등의 매우 중요한 기능에 대한 기여를 Argo 공식 블로그에서 언급되며 기록을 남기기도 하였습니다.\n\nArgo Workflows의 3.5버전 릴리즈 이후에도, 계속하여 컨트리뷰터들의 DX개선을 위한 CI및 테스트 환경, Nix, Controller, Template 스펙의 새로운 피쳐 개발, Go Lang 버전 업데이트 등의 높은 난이도의 컨트리뷰션등을 이어나가고 있으며, 다음 릴리즈 배포에는 더욱 많은 기여로 Argo Workflows가 더욱 훌륭한 툴로 거듭나는데 의미있는 성과를 보태는 중입니다.","메인테이너-그룹과의-긴밀한-소통#메인테이너 그룹과의 긴밀한 소통":"저희 팀은 운이 매우 좋았습니다. Argo Workflows 프로젝트가 올해 5월에 Yuan Tang이라는 새로운 리더를 맞이하면서 프로젝트 전체의 컨트리뷰션 호흡이 매우 빨라졌다는 점입니다.보통 이런 대형 프로젝트에서는 리뷰에 상당히 오랜 시간이 걸려서 많은 컨트리뷰션을 해내기 어렵다고 생각하고 시작했었는데,\n능력있는 프로젝트 헤드와 그 팀원들 덕분에 이번 대회에 참가한 ArgoWorkflows 팀원들 모두 굉장히 많은 것들을 배우고 경험하며 짧은 시간 내에 많은 기여를 통해 성장할 수 있었습니다.\n\n기여를 이어나가다 보니, 워크플로우 엔진의 핵심적인 기능들에 대한 기여에 가까워질 수록, PR 페이지를 넘어서 CNCF슬랙을 통해 메인테이너 분들과 긴밀하게 소통하고 의견을 나눌 수 있는 상황들도 생겨났습니다.논의를 통해서 이슈를 해결하기 위해 프로젝트에서 로직을 처리하기 위한 정책을 결정하기도 하고, 연관된 다른 이슈를 할당받아 진행하는 경험을 하는 등, 오픈소스 프로젝트의 진정한 일원이 되어가는 소중한 경험을 해볼 수 있었습니다.프로젝트 기간동안 저희 팀이 기여한 작업물들을 소개합니다.","️-참가자-기여-내용-상세#☑️ 참가자 기여 내용 상세":"","0-염근철#0. 염근철":"","-개인-성과-보고#🌿 개인 성과 보고":"접기/펼치기\n\n크크루 삥뽕\n\n\n\n이미지 첨부 예시\n\n\n\n개인 보고서에 들어가는 이미지 반드시 커밋 전에 용량 줄일 것.\n개인 보고서 이미지는 별도 폴더를 images 하위에 생성하여 만들기\n개인 보고서 내용에 제목 쓰지 말것","-참가-후기#🌵 참가 후기":"ㄱㄴㄷㄹ","1-강병선#1. 강병선":"","-개인-성과-보고-1#🌿 개인 성과 보고":"접기/펼치기\nㄱㄴㄷㄹ","-참가-후기-1#🌵 참가 후기":"ㄱㄴㄷㄹ","2-강시온#2. 강시온":"","-개인-성과-보고-2#🌿 개인 성과 보고":"접기/펼치기\nㄱㄴㄷㄹ","-참가-후기-2#🌵 참가 후기":"ㄱㄴㄷㄹ","3-권영길#3. 권영길":"","-개인-성과-보고-3#🌿 개인 성과 보고":"접기/펼치기\nㄱㄴㄷㄹ","-참가-후기-3#🌵 참가 후기":"ㄱㄴㄷㄹ","4-김수빈#4. 김수빈":"","-개인-성과-보고-4#🌿 개인 성과 보고":"접기/펼치기\nㄱㄴㄷㄹ","-참가-후기-4#🌵 참가 후기":"ㄱㄴㄷㄹ","5-김학준#5. 김학준":"","-개인-성과-보고-5#🌿 개인 성과 보고":"접기/펼치기\nㄱㄴㄷㄹ","-참가-후기-5#🌵 참가 후기":"ㄱㄴㄷㄹ","6-박진수#6. 박진수":"","-개인-성과-보고-6#🌿 개인 성과 보고":"접기/펼치기\nㄱㄴㄷㄹ","-참가-후기-6#🌵 참가 후기":"ㄱㄴㄷㄹ","7-서청운#7. 서청운":"","-개인-성과-보고-7#🌿 개인 성과 보고":"접기/펼치기\nㄱㄴㄷㄹ","-참가-후기-7#🌵 참가 후기":"ㄱㄴㄷㄹ","8-송혜민#8. 송혜민":"","-개인-성과-보고-8#🌿 개인 성과 보고":"접기/펼치기\n\n** 컨트리뷰션 활동 **\n** Mutex check happens after memoization cache check and lock info missing from UI 버그수정 **Issue #11219\nPR #11456 - Merge 완료/3.4.10 릴리즈 포함Argo Workflow 의 Synchronization 및 Cache 기능을 동시에 사용할 수 있도록 수정할 수 있었습니다.해당 버그는 Argo Workflow 에서 Synchronization 및 Memoize 키워드를 같이 사용할 시 정상적으로 동작하지 않는 현상이었습니다.기대 동작은 Mutex Synchronization 이 동작한 이후 캐시가 동작하는 것이지만, Synchronization 가 동작한 뒤 캐시가 작동하지 않고 있었습니다.예를 들어 아래와 같이 job-1 과 job-2 가 있을 시 job-1 이 Synchronization 효과로 인해 먼저 동작을 하고 캐시를 쓰고 완료가 되면, job-2 는 ** 동일한 캐시로 인해서 동작하지 않고 Pass 해야 합니다.**\n\n저는 이 과정을 Synchronization 과 Cache 의 순서를 조정하는 것으로 올바르게 수정할 수 있었습니다.어렵지는 않은 수정이었지만, 복잡한 파일 중 하나인 operation.go 를 수정했기에 많은 리뷰와 함께 Argo Workflow 의 다양한 기능들을 살펴볼 수 있었던 PR 이라 생각합니다.** Parent level memoization is broken 버그수정 **Issue #11612\nPR #11623 - Merge 완료/3.4.11 릴리즈 포함위 수정으로 발생한 새로운 버그 사항으로, Argo Workflow 의 Template 레벨이 아닌 아래 Child 구성 요소에서 Memo 기능을 사용 시 무한 Pending 이 걸리는 버그가 제보되었습니다.\n\n이전 PR 에서 테스트를 추가했으나 확인하지 못한 Case 가 존재했다는 것을 인지하고, 오류 발생 원인을 분석해서 다시 핫픽스를 반영할 수 있었습니다. 이 예외 사항을 추후에도 발견하기 위한 테스트를 4개 포함하여 PR 을 진행했습니다.** UI: workflowDrawer's information link is not correctly working 버그수정 **Issue #11494\nPR #11495 - Merge 완료/3.4.10 릴리즈 포함Argo Workflow 대시보드에서 워크플로우를 펼쳤을 시, Information 아이콘의 링크가 망가진 사항을 수정했습니다.\n\n<a> 태그 중첩으로 인한 잘못된 이벤트 전파를 방지하는 코드를 추가해 제대로 클릭이 동작하게 만든 내용입니다.\n해당 코드 수정으로 다시 아이콘 클릭 시 올바른 문서로 이동하도록 만들 수 있었습니다.** Search by name for WorkflowTemplates in UI 기능개선 **Issue #11004\nPR #11684 - Merge 완료/3.4.10 릴리즈 포함다른 2명의 참가자 분들과 공동으로 개발하여 PR 을 진행한 내용입니다.\nArgo Workflow 에는 이름의 패턴을 통해 각 템플릿을 기능하는 유용한 기능이 빠져 있었습니다.\n\n이 기능을 추가로 제공하여 사용자가 더 이상 Yaml 의 라벨 뿐만이 아닌 이름으로도 Template 을 검색하도록 개발했습니다.\n특히 정확한 이름이 아닌 LIKE 검색이라는 것이 앞으로도 유용할 것 같습니다.\n이후에도 다른 페이지에 대해서 비슷한 수정을 통해 검색과 페이지네이션 기능을 확장할 예정이라 더욱 의미있는 PR 이었던 것 같습니다.** Add more readable Argo CLI installation guide into github documentation 문서기여 **Issue #11750\nPR #11751 - Merge 완료Argo Workflows 에서 사용하는 커맨드라인 인터페이스인 Argo CLI 에 대한 문서 기여입니다.\n\n현재 Argo CLI github 문서에는 인스톨에 대한 과정이 빠져 있어서, 첫 사용자가 Argo CLI 를 설치할 방법을 찾기가 어려웠습니다.\n기존에는 Release Note 로 직접 찾아 들어가거나 Quick Start 페이지로 반드시 들어가야 했는데, Argo CLI 페이지에 기존 Usage 이외에 Installation 항목을 추가하여 사용자 편의성을 높이도록 수정했습니다.** Workflow templating is skipped when whitespace is added to template parameters 버그수정 **Issue #11767\nPR #11781 - Merge 완료Argo Workflow 에서 workflow template 작성 시 들어가는 {{parameter}} 형태의 placeholder 가 {{ parameter }} 와 같이 앞 뒤로 공백이 있을 경우 유효성 검사가 되지 않는 현상이었습니다.\n내부 유효성 검사 코드에서 parameter 에 대해서 앞, 뒤의 공백을 자르는 trim 을 하지 않고 있는 것이 원인으로, 이 부분에 trim 을 추가하여 공백을 제거해 해결했습니다.\n이 기여로 인해 기존 placeholder 내용이 유효성 검사를 무시해버리는 현상도 바로 잡을 수 있었습니다.\n** 모임 개발 활동 **\n** Argo Workflow OSS 공통 Repo 에 PR 올려보기 **PR #22 - Merge 완료Argo Workflow PR 전 여러 사람이 기여하기 위한 사전 연습을 진행했습니다. 새로운 문서 및 기존 문서를 다른 참가자들과 동시에 수정하여 올려서 Git 커맨드 및 Rebase 의 소중함에 대해서 배울 수 있었습니다.** Dockerfile 로 웹서버 만들어보기 **PR #6 - Merge 완료로컬 8080 서버로 통신하여 localhost:8080 으로 접근 가능한 Dockerfile 을 하나 작성하고 서버를 띄우는 연습이었습니다.\n간단한게 Flask 로 파이썬 서버를 작성하고 Dockerfile 내 환경 설정, 서버 구동, 포트 연결을 통해서 Docker 커맨드로 외부에서도 서버에 접속 가능하도록 만들었습니다.","-참가-후기-8#🌵 참가 후기":"참가후기\n이전에도 오픈소스 컨트리뷰션 아카데미를 참여했었지만, 이번 아카데미의 프로그램과 멤버, 내용 모두가 특히 만족스러웠습니다.\n단기간에 소스 코드를 파악하고 기여를 시작하는 것이 쉽지 않은데, 작은 내용이나마 기여를 시작할 수 있었다는 것이 놀라운 경험이었습니다.\n멘토님의 집중적인 케어와 다른 참가자 분들의 열정이 정말 큰 도움이 되었다는 것을 깊게 느낄 수 있었습니다.\n혼자 시작했다면 금방 포기하고 잊어버렸을 내용이 다른 사람과 함께 진행하는 것만으로도 이렇게 달라질 수 있다는 것이 대단한 경험이었습니다.\n\n\n앞으로의 계획\n앞으로도 Argo Workflow 에 대한 컨트리뷰션을 이어나갈 생각이며, 다른 오픈소스 기여를 시작할 수도 있을 것 같습니다.\n특히, 이제는 관심 있는 오픈소스에 대해 접근해서 시작하는 방법을 배웠기 때문에 열정만 있다면 조금 더 수월하게 진행할 수 있을 것 같습니다.\n다른 사람에게도 오픈 소스 기여에 대한 재미를 적극 전파하며, 자신 있게 추천할 예정입니다.","9-안다혜#9. 안다혜":"","-개인-성과-보고-9#🌿 개인 성과 보고":"접기/펼치기\nㄱㄴㄷㄹ","-참가-후기-9#🌵 참가 후기":"ㄱㄴㄷㄹ","10-안지완#10. 안지완":"","-개인-성과-보고-10#🌿 개인 성과 보고":"접기/펼치기\nㄱㄴㄷㄹ","-참가-후기-10#🌵 참가 후기":"ㄱㄴㄷㄹ","11-유윤우#11. 유윤우":"","-개인-성과-보고-11#🌿 개인 성과 보고":"접기/펼치기\n1. 왕초보반 dockerfile 만들어보기\n\n\n\n나만의 웹 서비스를 만들고 도커파일을 통해 이미지를 빌드하고 컨테이너를 실행해보는 실습 진행\n각자 원하는 프레임워크와 언어를 통해 서비스를 구축, 저는 Nest.js를 사용했습니다.\n\n2. Nest.js 프레임워크 공부\nNest.js 학습한 레포지토리\n프론트 엔드밖에 몰랐기에 간단한 API 서비스를 만들기 위해 빠르게 학습\n\n3. dockerfile 생성 후 PR\n\n\n\n도커파일을 생성하여 image를 빌드해 서비스 정상작동까지 확인하고 PR을 올렸지만 github action의 빌드 테스트 실패\n--production 옵션을 제거하면 테스트에 통과하지만 image 최적화가 되지 않는 문제가 발생. 멘토님께 조언 요청\n\n\n\n\n멘토님의 피드백을 기반으로 문제해결 시작\n\n4. 트러블 슈팅\n\n\n\n\n\n\ndokerfile로 이미지 생성시에 크기를 줄이기 위해 node_modules를 production 환경만 설치하려고 했지만 github action을 통과하지 못함\n수많은 삽질끝에 nest-cli라는 모듈이 nest build시에 필요한데 devdependency안에 들어가 있던걸 변경하고 나니 해결됐다. (멘토님이 힌트를 주셨지만 못알아듣고 삽질한건 비밀)\n로컬에서 빌드가 문제없이 되어서 더 헷갈렸는데 이유는 내 맥북에 글로벌로 nest-cli가 설치되어 있었다..\n\n5. 오픈소스 컨트리뷰터 활동\n[UI: The position sticky on the workflow toolbar is not working]\nworkflows-list의 checkbox 선택 시 나오는 toolbar 위치가 상단에 고정 되어 있지 않던 버그를 해결했다.\n이슈 내용 보러가기\nPR 내용 보러가기\n\n[before]\n\n\n\n체크박스를 선택하고 스크롤 시 상단 툴바가 보이지 않는다.\n기존에 있는 position : sticky가 적용되지 않는 문제를 position : fixed로 변경해 해결했다.\n\n[after]\n\n\n\n체크박스 선택 후 스크롤 시에 상단에 툴바를 고정하여 별도의 스크롤 없이 바로 해당 리스트에 대한 이벤트를 실행할 수 있다.\n\n[UI - show history about completed runs in each cron workflow]\n의정님이 찾은 좋은 개선 사항을 함께 진행 cron-workflows-detail 컴포넌트에서 해당 워크플로우의 히스토리를 볼 수 있게 리스트를 추가하는 이슈\n이슈 내용 보러가기\nPR 내용 보러가기\n\n[before]\n\n\n\n기존 cron-workflows-detail 페이지에는 아무것도 없었지만\n\n[after]\n\n\n\n\n\n\n해당하는 cron-workflows에 히스토리 workflows와 히스토리가 없을 경우에 예시도 추가해줬다.\n해당 PR은 아직 확인중인 상태","-참가-후기-11#🌵 참가 후기":"너무 좋은 경험이였습니다.아쉽게 취업을 하게되면서 바빠지고 서버와 데브옵스쪽 지식이 부족해 많은 컨트리뷰터 활동이나 오프라인 모임에 참여하지 못한 아쉬움도 많이 남았습니다.그래도 포기하지않고 프론트엔드 쪽으로 더 많은 컨트리뷰터도 진행해보고 서버 쪽 공부도 진행해서 argoWorkflow에도 더 많은 기여를 해보도록 노력해보겠습니다!좋은 활동 만들어 주셔서 감사하고 왕초보여도 하나씩 단계를 밟아가며 성장할 수 있게 도와주신 멘토님 리드멘티 님들 감사합니다 👍","12-이병곤#12. 이병곤":"","-개인-성과-보고-12#🌿 개인 성과 보고":"접기/펼치기\nㄱㄴㄷㄹ","-참가-후기-12#🌵 참가 후기":"ㄱㄴㄷㄹ","13-이의주#13. 이의주":"","-개인-성과-보고-13#🌿 개인 성과 보고":"접기/펼치기\n1. Git 사용법 & Commit & PR 규칙 숙지\n컨트리 뷰션을 하기 위해 엄격한 Commit 과 Pull Request를 보내기 위한 기초적인 Git 사용법 숙지 및 Mission 수행\n공식 Argo Workflow 프로젝트에서도 컨트리뷰션 하고 싶은 Issue에 대해 Issue Template 를 이용하고 PR 을 날리는 방식을 사용하고 있어 도움이 되었고 Issue Template 의 존재도 알게된 계기가 되었음.\n향후 컨트리뷰션 부분에 꼭 필요한 요소들을 간접적으로 체험할 수 있는 기회\nPR 의 네이밍 컨벤션\nDCO 봇 Check\nGPG Commit\nCommit Message 컨벤션\n이슈와 PR을 연결\n\n\nIssue 생성 - 멤버 프로필 업데이트 - PR - Review - Merge 의 과정\n\n\n\n2. 왕초보 특별반 참여 (Mentor 가 생성한 초보자들을 위한 과정)\n왕초보 특별반 미션을 위한 Repo(container-playground)\nDocker 혹은 Kubernetes 에 익숙하지 않은 인원 혹은 처음인 인원에 도움을 주는데 목적\n\n\n\n멘토가 제시한 과제를 수행하면서 Docker Image 최적화의 필요성에 대해 학습\nFrom 절 부터 Layer(층)별로 어떤 패키지, Static file 들을 쌓아가는 과정이기 때문에 Docker 이미지가 무거워져 성능 향상에 악영향을 미칠 수 있기 때문에 최적화는 필수임을 깨달음.\n\n\nMission\n❗️목표❗️\n\n나만의 웹서비스를 제작하고, 컨테이너화 할 수 있는 도커파일을 작성해 봅니다.\n\n과제 통과를 위해서 반드시 아래 사항을 준수해 주세요.\n\n• 디렉터리 및 파일 배치\n• 나만의 서비스를 반드시 본인 github 계정 디렉터리를 생성하고, 그 아래 작성해주세요.\n• 본인 디렉터리의 최상단에는 반드시 `Dockerfile` 이 위치해야 합니다.(이 조건을 달성하지 못하면 CI가 실패합니다.)\n• 본인 디렉터리 아래에 한해서, `Dockerfile`의 위치를 제외한 나머지 파일들은 자유롭게 작성해도 됩니다.\n• 단, 본인 디렉터리 최상단에서 `docker build -t [이미지명] .` 명령을 수행 했을때 성공적으로 이미지가 빌드 되어야 합니다.\n• 빌드 된 이미지의 동작\n• 나만의 웹서비스는 반드시 8080포트에서 동작해야 합니다.\n• 빌드 된 이미지는 별도의 파라미터 없이 `docker run -d -p [포워딩 포트번호]:8080 [이미지명]` 으로 실행 했을 때 문제 없이 서비스 되도록 만들어야 합니다.\n• 웹서비스 개발언어 및 서비스 구조\n• 본인이 선호하는 어떤 언어, 어떤 프레임워크를 활용해도 상관 없습니다.\n• UI, 디자인이 존재하지 않는 단순 api서비스를 제작해도 상관 없습니다.\n• 단, 필수 api를 두개 만들어야 합니다. (응답값은 신경쓰지 않습니다.)\n1. /api/v1/[본인 github계정]\n2. /healthcheck\n• (Optional) 도커 이미지 최적화를 하면 더 좋습니다. ([참고](https://thearchivelog.dev/article/optimize-docker-image/))\n• [키워드를 활용한 PR과 이슈 연결 방법](https://docs.github.com/ko/issues/tracking-your-work-with-issues/linking-a-pull-request-to-an-issue#linking-a-pull-request-to-an-issue-using-a-keyword)을 참고하여 이슈와 PR을 연결해주세요. (수동연결 x)\n\n❗️ 참고사항❗️\n\n•도커의 개념과 Dockerfile을 작성하기 위해 아래 문서를 참고 하면 좋아요.\n\n• [Dockerfile 작성 공식 문서](https://docs.docker.com/engine/reference/builder/)\n• [왕초보를 위한 도커 사용법](https://mysetting.io/slides/xxj85vnvey) (Docker Toolbox관련 내용은 deprecate된 내용)\n\nPR을 올리고 머지하기 위해 아래 사항들을 참고하면 좋아요.\n\n• Repo에 브랜치등을 생성하거나 Push할 수 있는 권한이 없으므로 fork 후 작업해야 해요.\n• [PR의 네이밍 컨벤션](https://flank.github.io/flank/pr_titles/)을 참고해주세요.\n• [DCO](https://github.com/apps/dco) 봇의 체크를 통과하기 위한 조건을 참고하여 커밋해주세요.\n• [GPG](https://www.44bits.io/ko/post/add-signing-key-to-git-commit-by-gpg)를 이용해 커밋하는 방법을 이해하여 서명된 커밋을 작성해주세요.\n• [커밋 메시지 컨벤션](https://www.conventionalcommits.org/en/v1.0.0/)도 적용할 수 있으면 좋아요. 꼭 따르지 않더라도, 너무 의미없는 커밋 메시지는 지양해주세요.(Optional)```\n\n\n기존에 Python 기반의 Django 프레임워크를 다뤄본 경험이 있어 Django REST API를 생성하는 Docker FIle을 작성.\nPR을 날렸지만, 보안이슈 혹은 불필요한 패키지 import 구문 의 오류를 지적받음.\n\n\n\n\n\nDjango 프로젝트의 settings.py 코드에서는 SECRET_KEY 가 노출 된다는 것을 처음 알았으며 어떻게 이러한 보안 이슈를 해결할 수 있을까에 대해 고민해보는 시간을 가질 수 있었음.\nSecret key 가 담긴 .json 파일을 생성하고 settings.py 에서 json 파일을 참조하는 방향으로 진행하였다.\nsecret.json 파일은 Commit 에 올리지 못하므로 .gitignore 를 통해 json 파일을 무시하는 방법을 알게되었으며, dbsqlite3 같은 어떤 명령어 수행 후에 생성되는 불필요한 파일들도 무시할 수 있었음.\n로컬에서 개발한 결과물을 Git 프로젝트에 올리기 위해서는 여러 고려사항이 필요하다는 것을 깨달은 경험이었음.\n\n\n몇가지 Review를 통과하고 PR이 Merge 될 수 있었음.\n\n3. Argo Workflow Contributor\nArgo Workflow 를 이것저것 살펴보던 도중, Argo Workflow - Contact - Help 필드에서 Deprecated 된 Argo Workflow Slack 채널을 보게되었음.\n사소한 UI Issue 라고 생각했지만, UI가 어떤 언어로 보여주며, 어떤 방식으로 개발되었는지 확인할 수 있는 기회라고 생각하여 Issue 를 올리고 PR을 제출.\n\n\n생성한 IssueUI: non-existent Slack Workspace link on help page Issue\n\n\n이슈를 생성하니 Argo 프로젝트의 Maintainer 분이 금방 코멘트를 남겨주셨음.\n임의로 CNCF Argo Channel 링크로 Fix 하려 하였으나, 메인테이너분이 다른 링크로 Update 해달라는 코멘트를 받음.\n\n\n생성한 PRfix: deprecated Link(Help-Contact) Issue\n\n\nArgo Workflow 는 React 기반으로 UI가 구성되어 있었고, 컴포넌트별로 디렉토리가 정렬되어 있어 쉽게 코드를 분석할 수 있었음.\nIssue 가 있던 Code 부분\n\n\n실수로 Commit 중에 Signed-off 옵션을 생략해서 DCO 봇 TEST에 통과 못했지만, GIt 에서 이전 커밋을 되돌리거나(Rebase),\n여러 불필요한 커밋을 하나로 합치는(Squash) 기능을 알게되었고 이전 커밋을 돌려 git commit -S -s -m \"Commit Message\" 커밋하였음.\n‘LGTM’ 코멘트가 무슨뜻인가 찾아보았는데 구글에서는 LGTM이라는 태그를 달아 의사를 표현하는데 Looks Good To Me. 즉, 좋아 보인다는 뜻이라고 하여 뿌듯한 경험이었음.\n버그를 찾아내거나 UI를 수정하는 등의 과정도 중요하지만, 가장 중요한 것은 Argo Workflow 생태계가 정한 규칙대로 컨트리뷰션을 수행하는 과정도 중요하다고 생각한다.\n\n\n\n4. Argo Workflow Hackerton 참여 (Argo workflow - OSSCA 팀내에서 개최한 해커톤)\nPull Request(Merged) : feat: Search by name for WorkflowTemplates in UI\nIssue : Search by name for WorkflowTemplates in UI\n이슈 해커톤 활동 기간\n1차 해커톤 (해커톤 C조) : 23.08.16 - 23.08.20\n2차 해커톤 (해커톤 C조) : 23.08.20 - 23.08.27\n\n\n\n\n\n\n\n\n이슈 내용\n클러스터에 많은 수의 템플릿이 있는 경우 이름으로 검색하는 것이 좋지만, 검색기능이 없어 모든 템플릿을 스크롤하는 것은 항상 불편하다는 이슈\nArgo Workflow UI 에서 워크플로우 템플릿의 결과를 이름별로 필터링하는 기능이 필요하다고 생각되어서 조끼리 회의한 결과로 이슈를 채택.\n\n\n역할\nFront-End 담당\nArgo workflow Template UI 의 검색 필드(Bar) 생성\n.get 로직을 분석하여 Name Pattern(Like 검색)을 어디로 넘겨주는지 분석\nworkflow-template 컴포넌트 디렉토리의 workflow-template-filter.tsx, workflow-template-list.tsx 수정\n\n\n\n\n회의 내용\n회의는 Slack 해커톤 채널을 통해 조끼리 매일 의견과 정보를 공유\n1차 논의 내용\n\n\n1. name 검색 기능 (backend)\n\n• WorkflowTemplate 페이지\n• name 검색 추가(LIKE 검색)\n• ClusterWorkflowTemplate 페이지\n• name 검색 추가(LIKE 검색)\n• CronWorkflow 페이지\n• name 검색 추가(LIKE 검색)\n\n\n\n2. name 검색 기능 (frontend)\n\n• WorkflowTemplate 페이지\n• name 검색 ui 추가\n• ClusterWorkflowTemplate 페이지\n• 검색 사이드 바 추가 (name, label)\n• CronWorkflow 페이지\n• name 검색 ui 추가\n\n3. 페이지네이션 (frontend)\n\n• WorkflowTemplate 페이지\n• name 기준 pagination\n• ClusterWorkflowTemplate 페이지\n• pagination 추가\n• CronWorkflow 페이지\n• pagination 추가\n\n4. 테스트 코드 작성\n\n- name 검색 (LIKE 검색)\n- 어떤 테스트 코드 작성해야하는지 더 분석 필요\n\n2차 논의 내용\n1차 오프라인 회의\n\n\n\n\n\n\n1. 공동 커밋 방법\n\n• https://github.com/ArgoWorkflows-OSS/argo-workflows 레파지토리를 로컬에 클론받는다.\n• 해당 레파지토리에 우리 팀이 작업할 브랜치를 생성한다. (`master` vs `release-3.4.10`)\n• 해당 레파지토리의 해당 브랜치에서 각자 담당한 기능을 작업한다. (PR올리기 위한 커밋 규칙을 잘 지켜서 커밋한다.)\n• 모두의 작업이 완료되면 3명중 1명이 PR 템플릿에 맞게 PR을 날리기\n• 3명 모두가 컨트리뷰터가 될 수 있음\n\n2. 해커톤이고 정해진 기간이 있기 때문에 일단 workflow-template, cluster-workflow, cron-workflow 중 먼저 메인이라고 생각되는 workflow-template name filter 를 먼저 구현해보고 PR을 날려 메인테이너가 Merge 해주면 다음으로 넘어가기로 결정\n\n• 파트별 임무\n\n• 백엔드\n\n• workflow_template_server.go\n• 이름 필터링 및 페이지네이션 재계산\n\n• 프론트 :\n\n• workfflow-template-filter.tsx\n• Name 검색 UI 추가\n• Name 인자 수신 및 필터링\n• workflow-template-list.tsx\n• Name state 추가\n• userEffect list 에 name 전달\n• workflow-template.tsx, Utils.tsx\n• Name 인자 전달\n\n3차 논의 내용\n2차 오프라인 회의\n\n\n\n\n1. 오프라인 미팅 회의 내용\n\n• namespace 없는 경우도 필터 시 포함해야 할 것 같다는 의견. (namespace 없애자고 말 할 근거 부족 - 타 사이트(쿠버네티스 대시보드, 오픈시프트, 아르고씨디 등)들도 namespace 없는 경우 제공)\n• continue에서 사용하고 있는 로직을 가져와 적용가능한지와 커스텀한 결과에서도 continue를 그대로 유지할 수 있는지에 대한 생각\n• 수요일 밤까지 continue 로직 분석 후, continue를 사용하여 페이지네이션이 불가능 하다고 결론이 날 경우 이슈 코멘트에 질문 업로드\n• 프론트단 페이지네이션(데이터 리로드 안됨, argocd에서 사용중인 방식) vs 서버단 페이지네이션(매번 전체 리스트 조회 후 페이지네이션, 부하 괜찮을지)\n• 서버사이드 캐싱 구현할 경우 저장할 곳이 있는지\n\n\n\n2. 페이지 넘길때마다 매번 네임스페이스, 라벨만 적용해서 k8s 전체검색 하는걸로 결정\n\n3. offset 기반 페이지네이션 방법**에서 로직 추가로 구현\n• 안됐던 부분\n• next page 버튼 클릭 후 필터링 검색했을 경우, 있는 검색 결과더라도 아무 데이터도 나오지 않는다.\n• next page 버튼 클릭 후 페이지네이션 갯수 늘리면, 검색결과가 제대로 보이지 않는다.\n• 변경된 부분\n• continue 값을 서버에서 갱신해주다보니, 페이지 갯수를 늘리거나/필터링을 걸었을 때 서버에 이미 세팅된 continue값을 기준으로 페이지네이션을 해서 문제 존재,\ncontinue 값을 프론트에서 넘겨주도록 변경하는 방식을 채택(페이지 갯수 늘리거나/필터링을 걸었을 때 continue를 다시 0으로 세팅)\n\n\n\n4. 페이지네이션 테스트\n• workflow_template_server_test.go 통과\n• (workflow template 14개 등록)\n• UI workflow template 첫 페이지 정상\n• workflow template 페이지 limit 5, 10, 50 일 때 정상\n• workflow template 페이지 1 페이지에서 workflow template 추가 후 2페이지 이동\n• workflow template 페이지 1 페이지에서 workflow template 삭제 후 2페이지 이동\n• 위 내용을 `name pattern` 필터링 검색으로 테스트\n• name pattern 없이 검색 후 name pattern 추가하여 재검색\n• name pattern 포함 검색 후 name pattern 삭제 후 재검색\n\n5. PR 생성\n\nLike 필터(Name Pattern) 구현\n예) sp로 시작하는 workflow-template 검색가능\n\n\n\n\n결과\n\n\n구현은 성공이였으며, 이후에는 이전에 논의했던 cluster-template, cron-template 컴포넌트들을 수정할 예정\n\n\n\n\n\n5. 컨트리뷰션 활동 외 학습\nGoogle Kubernetes Study Jam 교육 수료\nBadge\nArchitecting with Google Kubernetes Engine: Foundations(Earned 7월 18, 2023 EDT)\nArchitecting with Google Kubernetes Engine: Workloads(Earned 7월 26, 2023 EDT)\nArchitecting with Google Kubernetes Engine: Production(Earned 8월 4, 2023 EDT)\n정리한 내용은 개인 블로그(velog)에 기록\neuijoo's Velog GCP Series","-참가-후기-13#🌵 참가 후기":"참가후기\n아카데미 이전에는 Argo CD에 대한 지식만 가졌지만, 이후에는 Argo Workflow 프로젝트에 대해 조사하고 분석하며 강력한 기능들을 어떻게 활용하면 좋을지 생각해볼 수 있는 레벨까지 도달할 수 있었음.\n처음 컨트리뷰션을 진행하면서 이슈를 생성하고 메인테이너들과 소통하며 부탁받은 사항에 대해 수정하고 PR을 생성하는 방식으로 진행하니 금방 코멘트가 달렸고 Merge 되는 성과를 달성.\n사소한 이슈일 수도 있지만, 기여하고자 하는 부분에대해 전체적인 분석이 필요하다고 느낀 경험이었음.\n이 뿐만이 아니라, 팀 내에서 자체적으로 이슈 해커톤을 진행하면서 UI 즉, 프론트 부분만이 아니라 백엔드 부분의 로직을 분석하며 Argo workflow가 내부에서 어떻게 상호작용하는지 분석할 수 있는 기회였음.\n우리조는 몸체가 큰 이슈여서 이에 맞춰 온라인 뿐만 아니라 오프라인 회의도 병행하며 진행한 결과 목표에 도달할 수 있었고, 두명의 인원은 현업에 종사하는 분들이여서 어려운 부분에 대해서는 친절히 설명해주셔서 유익한 경험이었음.\n계속해서 해커톤 팀원 혹은 전체 팀원들과 함께 소통하고 싶은 소망이 있음.\n\n\n앞으로의 계획\n아직 OSSCA 기간이 끝나지 않았기 때문에 지속적으로 이슈를 탐색(Cluster-workflow-template, Cron-workflow 등)하거나, Argo Workflow 문서의 오타나 번역 오류를 발견하고 지속적으로 PR을 제출할 생각임\n또한, OSSCA 기간이 끝난 이후에는 지금까지 정리해왔던 내용을 포트폴리오화 할 예정.\n토이프로젝트로 현재 진행중인 Argo Workflow를 활용한Data ETL 작업을 완료해볼 예정임.\n만약, 취업이 된다면 Argo Workflow의 많은 기능들을 현업에 도입하여 많은 인사이트를 창출하고 싶은 소망이 있음.","14-전의정#14. 전의정":"","-개인-성과-보고-14#🌿 개인 성과 보고":"접기/펼치기\nㄱㄴㄷㄹ","-참가-후기-14#🌵 참가 후기":"ㄱㄴㄷㄹ","15-정성락#15. 정성락":"","-개인-성과-보고-15#🌿 개인 성과 보고":"접기/펼치기\nㄱㄴㄷㄹ","-참가-후기-15#🌵 참가 후기":"ㄱㄴㄷㄹ","16-채문영#16. 채문영":"","-개인-성과-보고-16#🌿 개인 성과 보고":"접기/펼치기\nㄱㄴㄷㄹ","-참가-후기-16#🌵 참가 후기":"ㄱㄴㄷㄹ","17-최수녕#17. 최수녕":"","-개인-성과-보고-17#🌿 개인 성과 보고":"접기/펼치기\n1. Cron workflow can not apply volumeClaimTemplates config from argo controller config map (workflowDefaults)Issue #11344\nPR #11662\n이슈 분석\n이 이슈를 이해하기 위해서는 먼저 Default Workflows가 무엇인지를 알아야 했습니다.argo workflows controller configmap에 workflowDefaults 라는 필드는 넣어 워크플로에 대한 기본값을 설정할 수 있으며, 워크플로에 이미 해당 필드값이 있을 경우에는 워크플로 값이 우선된다는 것을 알게되었습니다.예를 들어 configmap을 다음과 같이 설정한 뒤에 Workflows를 생성하면\n# This file describes the config settings available in the workflow controller configmap\napiVersion: v1\nkind: ConfigMap\nmetadata:\nname: workflow-controller-configmap\ndata:\n# Default values that will apply to all Workflows from this controller, unless overridden on the Workflow-level\nworkflowDefaults: |\nmetadata:\nannotations:\nargo: workflows\nlabels:\nfoo: bar\nspec:\nttlStrategy:\nsecondsAfterSuccess: 5\nparallelism: 3\n자동으로 workflowDefaults 필드에 설정해준 대로 Workflows가 아래와 같이 생성됩니다.\napiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\ngenerateName: gc-ttl-\nannotations:\nargo: workflows\nlabels:\nfoo: bar\nspec:\nttlStrategy:\nsecondsAfterSuccess: 5 # Time to live after workflow is successful\nparallelism: 3\n해당 이슈는 workflowDefaults에 volumeClaimTemplates 값을 넣으면, CronWorflows/Workflows 생성 시 에러가 발생한다는 이슈였습니다.does not contain declared merge key: name 라는 에러메세지가 발생하는 것을 확인했습니다.코드를 확인해보니 StrategicMergePatch 함수에서 에러가 발생했고 이는 쿠버네티스의 patch 전략과 관계가 있었습니다.\nVolumeClaimTemplates []apiv1.PersistentVolumeClaim `json:\"volumeClaimTemplates,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"name\" protobuf:\"bytes,6,opt,name=volumeClaimTemplates\"`\nWorkflows에서 정의되어있는 타입인 VolumeClaimTemplates는 patchMergeKey로 name을 사용하도록 정의되어있었습니다.그러나 아래 PersistentVolumeClaim타입을 확인해보면 name은 존재하지 않습니다. 즉, 구조체에 정의되어있지 않은 값을 patchMergeKey로 정의해두어서 발생하는 문제였습니다.\ntype PersistentVolumeClaim struct {\nmetav1.TypeMeta `json:\",inline\"`\n// Standard object's metadata.\n// More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n// +optional\nmetav1.ObjectMeta `json:\"metadata,omitempty\" protobuf:\"bytes,1,opt,name=metadata\"`\n\n// spec defines the desired characteristics of a volume requested by a pod author.\n// More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims\n// +optional\nSpec PersistentVolumeClaimSpec `json:\"spec,omitempty\" protobuf:\"bytes,2,opt,name=spec\"`\n\n// status represents the current information/status of a persistent volume claim.\n// Read-only.\n// More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims\n// +optional\nStatus PersistentVolumeClaimStatus `json:\"status,omitempty\" protobuf:\"bytes,3,opt,name=status\"`\n}\n\n이슈 해결\nVolumeClaimTemplates에서 patchMergeKey를 제거하도록 해당 이슈를 수정하였습니다.그러나 VolumeClaimTemplates에 patchMergeKey가 붙은 이유는 Volume과 같은 컨벤션을 사용하고 있어서 였습니다.해당 이슈는 이처럼 정책과 관련되어있기 때문에 더 많은 의논이 필요한 상황입니다.ArgoWorkflows 프로젝트에 처음으로 올린 PR이었고 꽤나 많은 사람들이 불편해하고 있는 이슈의 원인을 찾아낼 수 있어서 기뻤습니다.2. Search by name for WorkflowTemplates in UIIssue #11004\nPR #11684\n이슈 분석\n이번 이슈는 3명으로 팀을 짜서 작업을 진행했습니다.\n\nWorkflowTemplates는 '이름'을 기준으로 검색하는 기능이 존재하지 않아 특정 WorkflowTemplates을 찾기 위해서는 label을 기준으로만 찾을 수 있었습니다.그래서 많은 사용자들은 불편함을 느끼고 있었으며 '이름'을 기준으로 찾을 수 있는 기능을 제공해줬으면 좋겠다는 '기능 개선' 관련 이슈였습니다.\n이슈 해결\n\n\n쿠버네티스 API를 통해 조회된 WorkflowTemplates의 결과를 '이름'을 기준으로 필터링하는 로직을 추가적으로 넣어 해당 기능을 구현하였습니다.그러나 한가지 이슈가 존재했습니다.기존 페이지네이션은 쿠버네티스 자체 continue 값을 이용해 구현되어있어서 쿠버네티스 결과를 이처럼 커스텀하게 조작할 경우 쿠버네티스 페이지네이션을 사용할 수 없었습니다.이를 어떻게 해결해야 할까 고민이 많았지만 쿠버네티스의 resourceVersion을 이용하여 커서 페이지네이션을 하도록 구현하는 로직을 적용함으로써 해당 문제를 해결하였습니다.혼자가 아니라 여럿이 의논하며 할 수 있어서 너무 재미있었습니다.또한 ArgoWorkflows 프로젝트에 정말 필요한 기능을 제공했다고 생각하여 기분이 좋았습니다.3. A problem that is not initialized when changing the number of page limitsIssue #11702\nPR #11703\n이슈 분석\nSearch by name for WorkflowTemplates in UI 이슈를 해결하면서 새로운 페이지네이션 버그를 발견하였습니다.페이지 갯수를 변경할 때 페이지네이션을 위해 사용하는 continue 값을 UI에서 초기화 시켜주지 않아서 데이터가 제대로 보이지 않는 문제였습니다.\n이슈 해결\nUI 코드에서 페이지 갯수 변경이 감지될 때 offset을 초기화 하도록 간단하게 로직을 수정하여 문제를 해결할 수 있었습니다.단 한줄의 코드 수정이었으나 이 한 줄로 인해 꽤나 불편함을 주었던 문제를 해결할 수 있었습니다.4. Pagination may not work correctly for archived workflows\n이슈 분석\nIssue #11715\nPR #11761Maintainer @terrytangyuan 님께서 직접 Slack으로 연락을 주신 이슈입니다.\n\n\n\n\n좋아하는 연예인에게 연락받은 기분이라 너무 기분이 좋아서 날아갈 뻔 했습니다. 기쁘고 들뜨는 마음을 누르고 이슈를 분석해보았습니다.Workflows와 ArchivedWorkflows가 이전에는 다른 페이지로 분리되어있었지만 master 버전부터 Workflows와 ArchivedWorkflows를 하나의 페이지로 합치고 ArchivedWorkflows가 존재한다면 같이 보여주도록 로직이 수정되었습니다.그러나 Workflows와 ArchivedWorkflows가 하나로 합쳐지면서 페이지네이션에서 문제가 발생했습니다.두 개의 리소스는 서로 전혀 다른 페이지네이션을 사용하도 있었습니다. Workflows는 쿠버네티스 자체 페이지네이션인 continue값을 사용하고 있었고, ArchivedWorkflows는 자체적으로 데이터베이스를 사용하기 때문에 데이터베이스를 이용하여 offset 방식으로 페이지네이션을 하고 있었습니다.그러나 ArchivedWorkflows에 Workflows에서 사용하는 continue값을 그대로 전달하면서 ArchivedWorkflows가 아예 조회되지 않는 문제가 발생했습니다.\n이슈 해결\nSearch by name for WorkflowTemplates in UI 이슈를 해결하면서 구현했던 페이지네이션 로직을 참고하여 해당 이슈를 해결할 수 있었습니다.두 리소스는 다른 방법의 페이지네이션을 사용할 수 밖에 없기 때문에 두 개의 리소스를 합치기 전에 페이지네이션을 사용하는 것이 아닌, 일단 전체 리소스를 조회하여 두 리소스를 합친 후에 마지막으로 페이지네이션 로직을 적용하는 방법을 사용하였습니다.ArchivedWorkflows가 조회되지 않는 문제를 해결할 수 있었으나 페이지를 변경할 때마다 전체 리스트를 가져와 합치기까지 하는 것이 성능상 걱정이 되는 부분이라 성능 테스트를 할 수 있는 방법을 고민해볼 생각입니다.성능테스트를 해본 뒤 아니다싶으면 프론트에서 페이지네이션을 하는 방식으로 변경해볼 생각입니다.크리티컬한 이슈를 해결할 수 있어서 너무 좋았고 ArgoWorkflows 프로젝트에 컨트리뷰터로써 제대로 기여를 하고 있다는 생각이 들어 뿌듯하고 재밌었습니다.5. Relocation of Commit Guidelines Information in the DocumentationIssue #11700\nPR #11701\n이슈 분석\nArgoWorkflows 프로젝트에는 컨트리뷰션을 시도하는 개발자들을 위한 리드미 문서가 있습니다.하지만 그곳에는 커밋에 관한 가이드라인이 따로 언급되어있지 않습니다.GeunSam2 멘토님께서 본인이 처음 기여를 시도하려고 했을 때 커밋에 대한 가이드라인을 찾는데 너무 오래 걸려서 불편했다고 말해주셨습니다.\n이슈 해결\n\n\n이 불편사항을 들은 후 컨트리뷰션 리드미에 커밋에 대한 가이드라인의 링크를 걸어주도록 수정함으로써 ArgoWorkflows에 기여하고자 하는 개발자들이 편하게 기여할 수 있도록 하였습니다.이 PR에서는 메인테이너가 코드 제안을 해주었는데 코드 제안 기능을 처음 접해보아서 흥미롭고 재밌었습니다.","-참가-후기-17#🌵 참가 후기":"이번년도에 가장 잘 한 일이 무엇인지 묻는다면, 아무 망설임도 없이 ArgoWorkflows 프로젝트 컨트리뷰션 활동에 참여한 것이라고 이야기 할 것입니다.같은 분야에 있는 다양한 개발자들을 만나서 서로 공감대를 형성하며 이야기하는 것이 너무 좋았고 다양한 회사에 대한 이야기를 듣는것이 참 재밌었습니다.매주 모임마다 그저 모각코를 하는 것이 아니라 멘티들과 멘토님이 매번 좋은 세미나를 진행해주셔서 매주 일요일이 참 즐겁고 시간이 빨리갔습니다.또한 너무 능력있는 멘토님을 만나 평소에 주니어 개발자로서 고민되었던 부분, 앞으로의 방향성, 개발자로서 잘 공부하는 방법에 대한 조언들을 들을 수 있어서 행복했습니다.평소 컨트리뷰션에 도전해보고싶었지만, 이런 큰 프로젝트에 어떻게 기여를 하나 두려워서 시도하지 않았던 부분들을 이렇게 좋은 멘티들과 멘토님과 같이 부딪혀보니 두려움이 사라졌습니다.많은 PR을 올려보면서 메인테이너들과 소통하는 것도 너무 재미있었고 실제 나의 코드가 반영되는 것을 지켜보는게 정말 뿌듯했습니다.이번 경험으로 인해 ArgoWorkflows 뿐만 아니라 다른 프로젝트에도 충분히 기여할 수 있겠다는 자신감이 생겼습니다.이 기간이 끝난다고 컨트리뷰션을 멈출 생각은 없습니다. 앞으로도 ArgoWorkflows를 꾸준히 보면서 기여하고 싶은 부분에 기여할 생각입니다. 또한 ArgoWorkflows 뿐만 아니라 회사에서 사용하는 Kubernetes나 Argo CD 프로젝트에도 기여해보고 싶어서 도전해볼 생각입니다."}},"/2023/activites/reports/finalReportEn":{"title":"Finalreporten","data":{"":"","️-meet-our-team#☑️ Meet Our Team":"The ArgoWorkflows OSS 2023 team consisted of one mentor and 17 mentees, for a total of 18 people working as a team.The team was organized with the help of the Open Source Contribution Academy,\nan awesome event that brings together junior and senior developers who may feel intimidated by open source to contribute,\nand was active for about 4 months from July to October 2023.Starting from our humble beginnings with Git to becoming accomplished open source contributors.Here's a look at what our team accomplished.","️-what-is-argoworkflows#☑️ What is ArgoWorkflows":"Argo Workflows is a container-based workflow engine, an open source project that allows you to run parallel jobs on Kubernetes.\nEach workflow step is defined as a container, and multi-step workflows can be modeled as a series of tasks, or dependencies between tasks can be executed using a Directed Acyclic Graph (DAG).In short, Argo Workflows makes it faster and easier to perform tasks in the form of simple workflows, as well as complex tasks for machine learning or data processing, on Kubernetes.\n\nArgo Workflows is a graduated project of the Cloud Native Computing Foundation (CNCF).To become a graduated project, you must pass all of the tests that the CNCF conducts to meet their rigorous standards.\nThis means that being recognized as a graduated project means that Argo meets the highest standards for clear governance and committer processes, healthy growth, and security and compliance adherence.\nBecause of the rigorous standards, only about 13% of projects registered with the CNCF succeed in graduating.In fact, it took the Argo project over 7000 contributors, over 11,000 PRs, and over 370,000 contributions over a period of about 5 years to be recognized as a graduating project.Not only that, but the Argo project is still a very active and up-to-date open source project with over 2300 companies contributing to the code and over 8300 people contributing to the code.This makes Argo Workflows the most recognized workflow engine in the cloud native community.Many organizations around the world have officially adopted and use Argo Workflows. This is a strong proof that Argo Workflows can solve the problems of real workloads even in the largest enterprises.Some of the leading companies using Argo Workflows include.\n\n... and over 200 other global companiesSome alternative tools to Argo Workflows include Apache Airflow, Tekton, and Prefect.Argo Workflows is a Kubernetes-native engine that makes it easy to orchestrate container-based workflows and manage resources.\nThis is one of the key differences compared to similar tool Apache Airflow, which is a standalone application and does not inherently utilize the capabilities of Kubernetes.\nAs a result, resource management and scalability can be more challenging with Airflow than with Argo Workflows.Also, because Argo Workflows runs each workflow step as an independent container, it can perform a variety of tasks, such as CI/CD as well as data pipelines.\nThis is possible by leveraging the power of Docker and Kubernetes, which allows you to run anything without restrictions.","️-key-accomplishments#☑️ Key Accomplishments":"","uiux-improvements#UI/UX improvements":"The Argo Workflows project is actively contributing to the topic, with UI/UX improvements as the main keyword for contributions, a separate project page, and issue tracking.\n\nOur team has also made many UI improvements along the lines of these project goals.\nKey improvements\n\nWorkflows search functionality\nImprovements to the summary view of cronworkflows\nImprovements to DataPciker\nSticky option in workflows control panel\nlabel highlighting in workflows list\nVarious other bug fixes","improving-core-functionality#Improving core functionality":"As members began to gain experience contributing, their understanding of the project grew, and as they gained confidence,\nthey were increasingly able to contribute not only to UI/UX improvements, but also to the core functionality of the workflow engine.What’s new in Argo Workflows v3.5The core logic of the workflow engine is installed as a CRD in Kubernetes and has a significant impact on the behavior and performance of a Kubernetes cluster,\nmaking it a very high level contribution that requires a high level of implementation and active participation in testing and policy discussions with maintainers.Despite the challenges, our team was able to make key contributions to the Argo Workflows 3.5 release,\nand our contributions to very important features such as Template Spec, Authentication, and Controller were mentioned on the Argo official blog.\n\nAfter the release of Argo Workflows 3.5, contributors continue to contribute to the CI and test environments for DX improvements, new features in the Nix, Controller, and Template specifications,\nand more challenging contributions such as updating the Go Lang version, and they are making meaningful contributions to the next release to make Argo Workflows an even better tool.","close-communication-with-the-maintainer-group#Close communication with the maintainer group":"Our team was very fortunate that the Argo Workflows project got a new leader in May of this year, Yuan Tang, and the breath of contributions across the project really accelerated.Normally, in a large project like this, it would take quite a long time for reviews to take place, making it difficult to get a lot of contributions,\nbut thanks to the talented project head and his team, all of the ArgoWorkflows team members who participated in this competition learned a lot, experienced a lot,\nand grew through a lot of contributions in a short time.\n\nAs I've gotten closer to contributing to the core features of the workflow engine, there have been situations where I've been able to communicate and interact with maintainers on CNCF Slack beyond the PR page.Through these discussions, I've been able to determine policies for handling logic in the project to resolve issues,\nand have been assigned other related issues to work on, giving me valuable experience in being a true part of an open source project.Here are some of the contributions my team made during the project.","️-detail-of-contributions#☑️ Detail of Contributions":"","1-강병선#1. 강병선":"","-personal-activity-report#🌿 Personal Activity Report":"Collapse/Expand\nabcd","-participation-review#🌵 Participation Review":"abcd","2-강시온#2. 강시온":"","-personal-activity-report-1#🌿 Personal Activity Report":"Collapse/Expand\nabcd","-participation-review-1#🌵 Participation Review":"abcd","3-권영길#3. 권영길":"","-personal-activity-report-2#🌿 Personal Activity Report":"Collapse/Expand\nabcd","-participation-review-2#🌵 Participation Review":"abcd","4-김수빈#4. 김수빈":"","-personal-activity-report-3#🌿 Personal Activity Report":"Collapse/Expand\nabcd","-participation-review-3#🌵 Participation Review":"abcd","5-김학준#5. 김학준":"","-personal-activity-report-4#🌿 Personal Activity Report":"Collapse/Expand\nabcd","-participation-review-4#🌵 Participation Review":"abcd","6-박진수#6. 박진수":"","-personal-activity-report-5#🌿 Personal Activity Report":"Collapse/Expand\nabcd","-participation-review-5#🌵 Participation Review":"abcd","7-서청운#7. 서청운":"","-personal-activity-report-6#🌿 Personal Activity Report":"Collapse/Expand\nabcd","-participation-review-6#🌵 Participation Review":"abcd","8-송혜민#8. 송혜민":"","-personal-activity-report-7#🌿 Personal Activity Report":"Collapse/Expand\n\n** Contribution Activities **\n** Mutex check happens after memoization cache check and lock info missing from UI Bug Fix **Issue #11219\nPR #11456 - Merged/Included in 3.4.10 releaseI managed to modify Argo Workflow to simultaneously utilize the Synchronization and Cache functionalities.This bug manifested when using both the Synchronization and Memoize keywords in Argo Workflow, causing it not to operate correctly.The expected behavior was for the Mutex Synchronization to function first followed by the cache, however, after Synchronization occurred, the cache failed to operate.For instance, when there are job-1 and job-2, if job-1 operates first due to Mutex Synchronization and writes to the cache, job-2 ** should pass without operating, courtesy of the shared cache.**\n\nI was able to fix this by adjusting the sequence of Synchronization and Cache.While the fix was not complicated, modifying the operation.go, one of the intricate files, allowed me to explore various features of Argo Workflow with many reviews.** Parent level memoization is broken Bug Fix **Issue #11612\nPR #11623 - Merged/Included in 3.4.11 releaseA new bug arose from the above fix. When using the Memo function in child components rather than at the Template level in Argo Workflow, a bug was reported that caused infinite pending.\n\nI realized that there were unaddressed cases in the tests added in the previous PR. After identifying the cause of the error, I quickly patched it. I included four tests in the PR to detect such exceptions in the future.** UI: workflowDrawer's information link is not correctly working Bug Fix **Issue #11494\nPR #11495 - Merged/Included in 3.4.10 releaseI fixed an issue where the Information icon link was broken when expanding a workflow on the Argo Workflow dashboard.\n\nI introduced code to prevent incorrect event propagation caused by nested <a> tags. This correction ensured that clicking on the icon now directs users to the correct documentation.** Search by name for WorkflowTemplates in UI Feature Enhancement **Issue #11004\nPR #11684 - Merged/Included in 3.4.10 releaseThis was a collaborative effort with two other contributors.A helpful feature that allows templates in Argo Workflow to function through name patterns was missing.\n\nWe developed an additional feature that lets users search for templates not just by Yaml labels, but also by names.\nThe LIKE search, not just precise naming, will prove useful in the future. Plans are underway to extend this search and pagination functionality to other pages, making this a particularly meaningful PR.** Add more readable Argo CLI installation guide into github documentation Documentation Contribution **Issue #11750\nPR #11751 - MergedThis contribution pertains to the documentation of the Argo CLI, the command-line interface used with Argo Workflows.\n\nThe current Argo CLI GitHub documentation lacked installation procedures, making it challenging for first-time users to determine how to install the Argo CLI. Initially, users had to directly navigate to the Release Note or the Quick Start page.\nBy adding an Installation section to the Argo CLI page alongside the existing Usage details, I aimed to enhance user convenience.** Workflow templating is skipped when whitespace is added to template parameters Bug Fix **Issue #11767\nPR #11781 - MergedIn Argo Workflow, when authoring a workflow template, the placeholder in the form {{parameter}} did not undergo validation when spaces were added, such as {{ parameter }}.\nThe root cause was the internal validation code not trimming spaces before and after the parameter. By adding the trim function to remove spaces, I resolved this issue. This contribution also rectified other placeholder content that previously bypassed validation.\n** Development Activities **\n** Contributing to the Argo Workflow OSS Common Repo **PR #22 - MergedI undertook a preliminary exercise for multiple people to contribute to the Argo Workflow. We simultaneously modified new and existing documents with other participants, learning the importance of Git commands and the process of rebasing.** Creating a Web Server with Dockerfile **PR #6 - MergedThis exercise was about creating a Dockerfile that communicates with a local 8080 server and makes it accessible via localhost:8080.\nWe simply crafted a Python server using Flask, and through the Dockerfile, we set up the environment, initiated the server, and connected the port, making the server accessible externally via Docker commands.","-participation-review-7#🌵 Participation Review":"Post-Participation Review\nWhile I had participated in the open-source contribution academy before, I was especially satisfied with the program, members, and content of this academy.\nIt's not easy to understand the source code and start contributing in a short time, but it was an astonishing experience to be able to start contributing, even if it was a minor contribution.\nI deeply felt that the concentrated care from the mentor and the passion of other participants were genuinely helpful.\nStarting alone, I might have quickly given up and forgotten the content, but the experience was so different when progressing with others.\n\n\nFuture Plans\nI plan to continue contributing to Argo Workflow and may even start contributing to other open-source projects.\nEspecially now that I have learned how to approach and start with an open source I am interested in, I believe it will be a bit smoother as long as I have the passion.\nI will actively promote the fun of contributing to open source to others and confidently recommend it.","9-안다혜#9. 안다혜":"","-personal-activity-report-8#🌿 Personal Activity Report":"Collapse/Expand\nabcd","-participation-review-8#🌵 Participation Review":"abcd","10-안지완#10. 안지완":"","-personal-activity-report-9#🌿 Personal Activity Report":"Collapse/Expand\nabcd","-participation-review-9#🌵 Participation Review":"abcd","11-유윤우#11. 유윤우":"","-personal-activity-report-10#🌿 Personal Activity Report":"Collapse/Expand\nabcd","-participation-review-10#🌵 Participation Review":"abcd","12-이병곤#12. 이병곤":"","-personal-activity-report-11#🌿 Personal Activity Report":"Collapse/Expand\nabcd","-participation-review-11#🌵 Participation Review":"abcd","13-이의주#13. 이의주":"","-personal-activity-report-12#🌿 Personal Activity Report":"Collapse/Expand\nabcd","-participation-review-12#🌵 Participation Review":"abcd","14-전의정#14. 전의정":"","-personal-activity-report-13#🌿 Personal Activity Report":"Collapse/Expand\nabcd","-participation-review-13#🌵 Participation Review":"abcd","15-정성락#15. 정성락":"","-personal-activity-report-14#🌿 Personal Activity Report":"Collapse/Expand\nabcd","-participation-review-14#🌵 Participation Review":"abcd","16-채문영#16. 채문영":"","-personal-activity-report-15#🌿 Personal Activity Report":"Collapse/Expand\nabcd","-participation-review-15#🌵 Participation Review":"abcd","17-최수녕#17. 최수녕":"","-personal-activity-report-16#🌿 Personal Activity Report":"Collapse/Expand\n1. Cron workflow can not apply volumeClaimTemplates config from argo controller config map (workflowDefaults)Issue #11344\nPR #11662\nIssue Analysis\nTo understand this issue, I first needed to grasp what Default Workflows are.I learned that the workflowDefaults field in the argo workflows controller configmap allows you to set default values for workflows. Additionally, I discovered that if a workflow already has values for this field, those values take precedence.For example, after configuring the configmap as follows, when you create a Workflow,\n# This file describes the config settings available in the workflow controller configmap\napiVersion: v1\nkind: ConfigMap\nmetadata:\nname: workflow-controller-configmap\ndata:\n# Default values that will apply to all Workflows from this controller, unless overridden on the Workflow-level\nworkflowDefaults: |\nmetadata:\nannotations:\nargo: workflows\nlabels:\nfoo: bar\nspec:\nttlStrategy:\nsecondsAfterSuccess: 5\nparallelism: 3\nit will be automatically created with the values set in the workflowDefaults field, like this:\napiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\ngenerateName: gc-ttl-\nannotations:\nargo: workflows\nlabels:\nfoo: bar\nspec:\nttlStrategy:\nsecondsAfterSuccess: 5 # Time to live after workflow is successful\nparallelism: 3\nThe issue was related to an error occurring when adding the volumeClaimTemplates value to workflowDefaults, causing errors when creating CronWorkflows or Workflows.The error message indicated, does not contain declared merge key: name.Upon checking the code, it was found that the error occurred in the StrategicMergePatch function, which is related to Kubernetes' patch strategy.\nVolumeClaimTemplates []apiv1.PersistentVolumeClaim `json:\"volumeClaimTemplates,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"name\" protobuf:\"bytes,6,opt,name=volumeClaimTemplates\"`\nThe issue arose from the fact that the VolumeClaimTemplates type defined in Workflows used name as the patchMergeKey.However, upon inspecting the PersistentVolumeClaim type below, it was found that name was not present. In other words, the problem occurred because a value was defined as the patchMergeKey that was not part of the structure.\ntype PersistentVolumeClaim struct {\nmetav1.TypeMeta `json:\",inline\"`\n// Standard object's metadata.\n// More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n// +optional\nmetav1.ObjectMeta `json:\"metadata,omitempty\" protobuf:\"bytes,1,opt,name=metadata\"`\n\n// spec defines the desired characteristics of a volume requested by a pod author.\n// More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims\n// +optional\nSpec PersistentVolumeClaimSpec `json:\"spec,omitempty\" protobuf:\"bytes,2,opt,name=spec\"`\n\n// status represents the current information/status of a persistent volume claim.\n// Read-only.\n// More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims\n// +optional\nStatus PersistentVolumeClaimStatus `json:\"status,omitempty\" protobuf:\"bytes,3,opt,name=status\"`\n}\n\nIssue Resolution\nI removed the patchMergeKey from VolumeClaimTemplates.However, the reason patchMergeKey was added to VolumeClaimTemplates was to maintain consistency with conventions used for Volumes.Since this issue is related to policies, it indeed requires further discussion.This was my first PR to the ArgoWorkflows project, and it's great that i was able to identify the cause of an issue that was causing inconvenience for many people.2. Search by name for WorkflowTemplates in UIIssue #11004\nPR #11684\nIssue Analysis\nThis issue was worked on by a team of three people.\n\nWorkflowTemplates do not have a search function based on 'name', so to find a specific WorkflowTemplates, you could only search based on label.So, many users were feeling inconvenienced, and it was an issue related to 'feature improvement' that they would like to provide a function to search based on 'name'.\nIssue Resolution\n\n\nWe added additional logic to filter the results of WorkflowTemplates retrieved through the Kubernetes API based on their 'name', successfully implementing this feature.However, there was one issue.Existing pagination was implemented using Kubernetes' own continue value, so if Kubernetes results were custom manipulated like this, Kubernetes pagination could not be used.We had a lot of concerns about how to solve this, but We solved the problem by applying logic to implement cursor pagination using Kubernetes' resourceVersion.It was so fun to be able to discuss it with others instead of alone.I also felt good about providing some really needed functionality to the ArgoWorkflows project.3. A problem that is not initialized when changing the number of page limitsIssue #11702\nPR #11703\nIssue Analysis\nWhile resolving the Search by name for WorkflowTemplates in UI issue, i discovered a new pagination bug.When changing the number of pages, the continue value used for pagination was not initialized in the UI, so the data was not displayed properly.\nIssue Resolution\nI was able to solve the problem by simply modifying the logic to initialize offset when a change in page number is detected in the UI code.It was only a one-line code change, but this one line solved a problem that was quite inconvenient.4. Pagination may not work correctly for archived workflows\nIssue Analysis\nIssue #11715\nPR #11761This issue was directly communicated to us by Maintainer @terrytangyuan through Slack.\n\n\n\n\nIt felt like I was contacted by my favorite celebrity and I was so happy that I almost flew away. I suppressed my happy and excited heart and analyzed the issue.Workflows and ArchivedWorkflows were previously separated into different pages, but starting from the master version, Workflows and ArchivedWorkflows are combined into one page, and the logic has been modified to show ArchivedWorkflows together if they exist.However, when Workflows and ArchivedWorkflows were merged into one, a problem occurred with pagination.The two resources also used completely different pagination. Workflows was using the continue value, which is Kubernetes' own pagination, and ArchivedWorkflows used its own database, so it was using the database to perform pagination using the offset method.However, while passing the continue value used in Workflows to ArchivedWorkflows as is, a problem occurred where ArchivedWorkflows was not searched at all.\nIssue Resolution\nI was able to resolve the issue by referring to the pagination logic that was implemented while resolving the Search by name for WorkflowTemplates in UI issue.Since the two resources have no choice but to use different methods of pagination, rather than using pagination before merging the two resources, use a method of first searching the entire resource and merging the two resources and finally applying the pagination logic. I did it.I was able to solve the problem of ArchivedWorkflows not being searched, but fetching and merging the entire list every time the page is changed is a performance concern, so i'm thinking about a way to test performance.I plan to switch to front-end pagination if performance testing indicates that it's not working well.It was great to be able to solve a critical issue, and I felt proud and fun because I felt like I was contributing properly to the ArgoWorkflows project as a contributor.5. Relocation of Commit Guidelines Information in the DocumentationIssue #11700\nPR #11701\nIssue Analysis\nThe ArgoWorkflows project has a README document for developers attempting to contribute.However, it does not mention specific guidelines for commits.@GeunSam2 mentor mentioned that it was inconvenient when initially attempted to contribute and had difficulty finding commit guidelines.\nIssue Resolution\n\n\nUpon hearing this feedback, I made a modification to the contribution README by adding a link to commit guidelines.This change aims to make it easier for developers who want to contribute to ArgoWorkflows.In this PR, a maintainer provided a code suggestion, which was intriguing and enjoyable for me as I was encountering the code suggestion feature for the first time.","-participation-review-16#🌵 Participation Review":"If someone were to ask me what I did best this year, I would confidently say that it was my participation in the ArgoWorkflows project contribution activities.Meeting various developers in the same field, forming a sense of empathy, and engaging in discussions with them was truly enjoyable. Hearing stories about different companies was also quite interesting.During our weekly meetings, it wasn't just about working together; our mentors always conducted insightful seminars. Sundays became genuinely enjoyable, and time flew by.Meeting such capable mentors was a delight. I received advice on the concerns I had as a junior developer, my future direction, and how to study effectively as a developer, which made me happy.I always wanted to try contributing, but I was afraid to tackle such a big project. However, facing these challenges with such great mentees and mentors made my fears disappear.Submitting numerous PRs and communicating with maintainers was also a lot of fun, and it was really satisfying to see my code being incorporated.Thanks to this experience, I gained the confidence to contribute not only to ArgoWorkflows but also to other projects.I have no intention of stopping my contributions after this period ends. I plan to continue contributing to ArgoWorkflows while looking for opportunities to contribute to Kubernetes and Argo CD projects used by my company."}},"/2023/activites/weeklyMeets/230715":{"title":"[07/15] 오픈소스 컨트리뷰션 아카데미 회의록","data":{"":"일시 : 2023년 07월 15일 일요일\n장소 : OpenUP (Creative Ground)","️-참석자#☑️ 참석자":"염근철, 강병선, 권영길, 김수빈, 김원식, 김학준, 박진수, 서청운, 송혜민, 안다혜, 안지완, 유윤우, 이병곤, 이의주, 전의정, 정성락, 조국희, 채문영, 최수녕","️-회의-내용#☑️ 회의 내용":"당근마켓에서 ArgoWorkflows 도입한 사례 발표\n개발환경 세팅 방법 공유\n멘토 멘티 1on1 상담 진행","️-기념사진#☑️ 기념사진":""}},"/2023/activites/weeklyMeets/230723":{"title":"[07/23] 오픈소스 컨트리뷰션 아카데미 회의록","data":{"":"일시 : 2023년 07월 23일 일요일\n장소 : 무신사 회의실","️-참석자#☑️ 참석자":"염근철, 강병선, 강시온, 권영길, 박진수, 송혜민, 안다혜, 정성락, 최수녕","️-회의-내용#☑️ 회의 내용":"개별 관심 이슈 공유\n개별 기여 완료한 PR 공유\n개별 관심 기술 공유\n멘토 멘티 1on1 상담","️-기념사진#☑️ 기념사진":""}},"/2023/activites/weeklyMeets/230730":{"title":"[07/30] 오픈소스 컨트리뷰션 아카데미 회의록","data":{"":"일시 : 2023년 07월 30일 일요일\n장소 : OpenUP GROUND3","️-참석자#☑️ 참석자":"염근철, 송혜민, 전의정, 정성락, 박진수, 안다혜, 김학준, 이의주, 최수녕, 서청운, 권영길, 김수빈","️-회의-내용#☑️ 회의 내용":"개별 관심 이슈 공유\n개별 기여 완료한 PR 공유\n개별 관심 기술 공유\n멘토 멘티 1on1 상담\n실시간 통신을 위한 WebRtc의 개념 및 활용사례 발표(송혜민)\nArgo Workflows와 keyclock 연동방법 발표(최수녕)\n챌린지스 수료 기념 회식","️-기념사진#☑️ 기념사진":""}},"/2023/activites/weeklyMeets/230806":{"title":"[08/06] 오픈소스 컨트리뷰션 아카데미 회의록","data":{"":"일시 : 2023년 08월 06일 일요일\n장소 : OpenUP GROUND3","️-참석자#☑️ 참석자":"염근철, 송혜민, 전의정, 정성락, 김학준, 이의주, 최수녕, 서청운, 채문영, 강병선, 안지완, 강시온","️-회의-내용#☑️ 회의 내용":"개별 관심 이슈 공유\n개별 기여 완료한 PR 공유\n개별 관심 기술 공유\n멘토 멘티 1on1 상담\nargo event와 workflow, cd 연동 발표(김학준)\neBPF의 개념, 필터 개발 방법, 활용사례 발표(정성락)","️-기념사진#☑️ 기념사진":""}},"/2023/activites/weeklyMeets/230813":{"title":"[08/13] 오픈소스 컨트리뷰션 아카데미 회의록","data":{"":"일시 : 2023년 08월 13일 일요일\n장소 : OpenUP GROUND3","️-참석자#☑️ 참석자":"염근철, 안다혜, 최수녕, 김학준, 강병선, 전의정, 정성락, 서청운, 박진수","️-회의-내용#☑️ 회의 내용":"개별 관심 이슈 공유\n개별 기여 완료한 PR 공유\n개별 관심 기술 공유\n멘토 멘티 1on1 상담\n컨테이너의 역사와 도커 없이 컨테이너 만들기 발표(염근철)\n이슈 해커톤 계획 수립","️-기념사진#☑️ 기념사진":""}},"/2023/activites/weeklyMeets/230820":{"title":"[08/20] 오픈소스 컨트리뷰션 아카데미 회의록","data":{"":"일시 : 2023년 08월 20일 일요일\n장소 : OpenUP GROUND3","️-참석자#☑️ 참석자":"염근철, 송혜민, 전의정, 정성락, 안다혜, 김학준, 이의주, 최수녕, 서청운, 권영길, 김수빈, 채문영, 안지완","️-회의-내용#☑️ 회의 내용":"개별 관심 이슈 공유\n개별 기여 완료한 PR 공유\n개별 관심 기술 공유\n멘토 멘티 1on1 상담\n개발자가 스스로 부하테스트 할 수 있는 플랫폼 구축기 & K6 부하테스트 PoC 발표(안다혜)\n이슈해커톤 a,b,c조 진행 공유","️-기념사진#☑️ 기념사진":""}},"/2023/activites/weeklyMeets/230827":{"title":"[08/27] 오픈소스 컨트리뷰션 아카데미 회의록","data":{"":"일시 : 2023년 08월 27일 일요일\n장소 : OpenUP GROUND3","️-참석자#☑️ 참석자":"염근철, 정성락, 최수녕, 이의주, 김학준, 송혜민","️-회의-내용#☑️ 회의 내용":"개별 관심 이슈 공유\n개별 기여 완료한 PR 공유\n개별 관심 기술 공유\n멘토 멘티 1on1 상담\n컨테이너 생태계에 관한 고찰 발표(염근철)\n이슈해커톤 a, c조 진행 공유","️-기념사진#☑️ 기념사진":""}},"/2023/activites/weeklyMeets/230904":{"title":"[09/04] 오픈소스 컨트리뷰션 아카데미 회의록","data":{"":"일시 : 2023년 08월 27일 일요일\n장소 : OpenUP GROUND3","️-참석자#☑️ 참석자":"염근철, 강병선, 김수빈, 정성락, 전의정, 서청운","️-회의-내용#☑️ 회의 내용":"개별 관심 이슈 공유\n개별 기여 완료한 PR 공유\n개별 관심 기술 공유\n'Github Actions 쿠버네티스에서 self-hosted로 설치&운영하기 발표 (서청운)","️-기념사진#☑️ 기념사진":""}},"/2023/members":{"title":"Members","data":{"":"","멤버-목록#멤버 목록":"염근철(멘토)\n\n\n강병선\n강시온\n권영길\n김수빈\n김원식\n김학준\n박진수\n서청운\n송혜민\n안다혜\n안지완\n유윤우\n이병곤\n이의주\n전의정\n정성락\n채문영\n최수녕"}},"/2023/members/AhnDaHae":{"title":"Ahndahae","data":{"":"name : 안다혜\ngithub : da.head0\nage : 미상 ^.^\nblog : aimb\ntwitter : MM (비팔알림이 꺼져 있어서 팔로하시면 댓글이나 메시지 한번만 주세요...)\n\n2023 오픈소스 컨트리뷰션 아카데미의 ArgoWorkflows 프로젝트에 멘티로 참여하게 되었습니다.\n현재 SRE로 일하고 있습니다.\n2022년의 스터디봇입니다. 사실 2023년도 스터디봇으로 살고 있긴 합니다.\n치즈 조랭이떡 고양이를 키웁니다.\n키보드 좋아합니다. 같이 윤활하실분 항시 환영..."}},"/2023/members/AhnJiWan":{"title":"Ahnjiwan","data":{"":"name : 안지완\ngithub : synoti21\nage : 22\nblog : velog\n\n데이터 엔지니어링 중 파이프라인 CI/CD 배포에서 사용되는 k8s에 관심을 갖게되어 들이파게 됐고, k8s 기반 워크플로우인 argo workflow를 경험해보고자 OSS에 지원하게 되었습니다.MLOps 관련 발제 때문에 한 주간 너무 정신없어서 이제서야 올리네요ㅠㅠ다른 참가자분들에 비해 너무 부족해서 주눅드는 감이 없진 않지만 그래도 정말 열심히 참여하겠습니다."}},"/2023/members/ChaeMoonYoung":{"title":"Chaemoonyoung","data":{"":"name : 채문영\ngithub : mmonyoungCHAE\nage : 만 26살\nblog : Velog\n\n2023 오픈소스 컨트리뷰션 아카데미의 ArgoWorkflows 프로젝트에 멘티로 참여하게 되었다.\n클라우드 서비스 백엔드 개발자입니다.\n운동 좋아해요! (헬스, 가아아끔 클라이밍)"}},"/2023/members/ChoiSooNyeong":{"title":"Choisoonyeong","data":{"":"name : 최수녕\ngithub : sunyeongchoi\nage : 만 26살\nblog : 뇽뇽\n\n2023 오픈소스 컨트리뷰션 아카데미의 ArgoWorkflows 프로젝트에 멘티로 참여하게 되었다.웃을 때 하회탈 닮았어요. ^^\n좋아하는 운동은 수영 입니다.\n엠비티아이는 ISFP 입니다 ~"}},"/2023/members/GangByeongSun":{"title":"Gangbyeongsun","data":{"":"name : 강병선\ngithub : qudtjs0753\nage : 0~100살 사이\nblog : ??\n\n잘부탁드립니다 꾸벅\n방금 면접보고 왔습니다 ㅎㅎ\n이름을 외우기 힘드시다면 KBS로 외우시면 됩니다\n얘기듣는거 참 좋아합니다. 커피숍에서 멘토님이 기술 얘기 해주시는거 너무 재밌었습니다 더 듣고싶슴다"}},"/2023/members/GangSiOn":{"title":"Gangsion","data":{"":"name : 강시온\ngithub : Yaminyam\nage : 24\n\n2023 오픈소스 컨트리뷰션 아카데미의 ArgoWorkflows 프로젝트 멘티로 참여하게 되었습니다.\n평소에도 오픈소스에 흥미가 많고 꾸준히 기여하고 있습니다.\n개발자를 위한 개발자가 되기위해 최근에 DevOps에 흥미가 있어 Argo 프로젝트를 접해보고 싶어 참가하게 되었습니다."}},"/2023/members/GeonEuiJung":{"title":"Geoneuijung","data":{"":"name : 전의정\ngithub : juijeong8324\nage : 만 21세(01년생)\nblog : 뚜비\n\n작년 2022 오픈소스 컨트리뷰션에 참가하면서 오픈소스의 매력(?)에 빠져버렸습니다분야를 정하기 위해 이것저것 해보다가 클라우드/백엔드/Devops 쪽으로 관심이 생겨 공부를 시작하게 되었습니다휴학했습니다!! 휴학하고 6개월동안 코딩을 안 했습니다(죄송합니다)MBTI : ENTP & INTP 반반배워야 할게 산더미고 부족한게 많지만 열심히 따라가겠습니다. 감사합니다!p.s 뭘 적어야 하는지 모르겠으나 TMI 적는 공간이라 이해하고 적어봅니다.."}},"/2023/members/JungSungRock":{"title":"Jungsungrock","data":{"":"name : 정성락\ngithub: Jack-R-lantern\nage: ??\nblog: ??\n\n2023 오픈소스 컨트리뷰션 아카데미의 ArgoWorkflows 멘티로 참여하게 되었습니다.container 기술을 좋아합니다.cncf를 굉장히 좋아합니다."}},"/2023/members/KimHakJun":{"title":"Kimhakjun","data":{"":"name : 염근철\ngithub : junkmm\nage : 미상\nblog : junkmm\n\n2023 오픈소스 컨트리뷰션 아카데미의 ArgoWorkflows 프로젝트 멘티로 참가하게 되었습니다.밖에 비온다 주룩주룩"}},"/2023/members/KimOwnSik":{"title":"Kimownsik","data":{"":"name : 김원식\ngithub : mihilt\nage : 미상\n\n2023 오픈소스 컨트리뷰션 아카데미의 ArgoWorkflows 프로젝트 멘티로 참여하게 되었습니다.요즘 일찍 자고 일찍 일어납니다.오늘 DCO 봇이라는 것을 처음 알게 되었습니다.\n문제 없이 DCO 봇의 체크가 통과되면 좋겠습니다."}},"/2023/members/KwonYoungGil":{"title":"Kwonyounggil","data":{"":"name : 권영길\ngithub : zel0rd\nage : 미상\nblog : zel0rd\n\n다양한 분야에 관심이 있습니다."}},"/2023/members/KimSuBin":{"title":"Kimsubin","data":{"":"name : 김수빈\ngithub : sudosubin\nage : 🔐\nblog : 없음\n\n오픈소스 컨트리뷰션 아카데미 2023에서 ArgoWorkflows 프로젝트의 멘티로 참여하게 되었습니다.현재는 백엔드 개발과 DevOps 개발을 공부하고 있고, 개인적으로는 고기와 수영을 좋아합니다."}},"/2023/members/LeeByeongGon":{"title":"Leebyeonggon","data":{"":"name : 이병곤\ngithub : binkoni\nage : 만27세\nblog : gonnux\n\n2023 오픈소스 컨트리뷰션 아카데미의 ArgoWorkflows 멘티로 참여하게되었다MBTI는 INTP이다\n리눅스와 오픈소스를 매우 좋아한다 (하지만 취업하니 기여할 시간이 없어진듯 하다)\n1년 반정도 일한 백엔드 개발자이다\n퇴근후 헬스중인 헬린이다\n개발 외 취미는 재테크, 유튜브(보기), 자전거이다\n개발자로서의 초심을 되찾기 위해 컨트리뷰션 아카데미에 참가했다"}},"/2023/members/LeeEuiJu":{"title":"Leeeuiju","data":{"":"name : 이의주\ngithub : Leeeuijooo\nage : 10025세\nblog : 의주\n\n2023 오픈소스 컨트리뷰션 아카데미의 ArgoWorkflows 멘티로 참여하게되었다MBTI ENFJ\n운동 좋아해요\n목욜날 면접인데 준비 안해서 떨려요\n2023 OSSCA 열심히 참여해보겠습니다"}},"/2023/members/ParkJinSu":{"title":"Parkjinsu","data":{"":"name : 박진수\ngithub : [umi0410(https://github.com/umi0410)\nage : 27\nblog : https://umi0410.github.io\n\n주로 K8s, container, ArgoCD Argo Rollouts 같은 Cloud-Native한 기술에 관심이 많습니다.올해에는 영어 공부에 관심이 좀 많이 가요. 일주일에 한 번씩 화상 영어도 해보고 있고, 일주일에 한 두번씩 회화 스터디도 나가보려 노력 중이에요. 그리고 기술 블로그에 글을 쓸 때에도 요즘은 최대한 영어로도 작성해보려 노력하고 있습니다.취미로는 간간히 기타를 치고 있기도 합니다. 잘 치진 못하지만요.여행도 최대한 다녀보려고 노력하고 있어요. 작년에는 미국을, 올해에는 호주를 혼자 여행갔다왔었는데 너무 감사한 경험이었던 것 같습니다."}},"/2023/members/SeoChungWun":{"title":"Seochungwun","data":{"":"name : 서청운\ngithub : newdeal123\nage : 20~30\nblog : 뉴딜의 서랍장\n\nMBTI는 ISFJ로 극F 극J 이다.홍대병이 있어 인디밴드를 참 좋아라 한다."}},"/2023/members/SongHaeMin":{"title":"Songhaemin","data":{"":"name : 송혜민\ngithub : shmruin\nage : 미상\nblog : 없음\n\n2023 오픈소스 컨트리뷰션 아카데미의 ArgoWorkflows 멘티로 참석하게 되었다.주기적으로 불면증이 있다.야근을 해서 피곤해도 집에 가면 활력이 생긴다."}},"/2023/members/YeomGeunCheol":{"title":"Yeomgeuncheol","data":{"":"name : 염근철\ngithub : GeunSam2\nage : 미상\nblog : 모두의 근삼이\n\n2023 오픈소스 컨트리뷰션 아카데미의 ArgoWorkflows 프로젝트 멘토를 담당하게 되었다.수전증이 있다.혼자 갑자기 급발진 해서 신날때가 있다."}},"/2023/members/YouYoonWoo":{"title":"Youyoonwoo","data":{"":"name : 유윤우\ngithub : YunCow\nage : 바뀐나이로 29살\nblog : 이전중인 블로그\n\n2023 오픈소스 컨트리뷰션 아카데미의 ArgoWorkflows 프로젝트 멘티로 참여중입니다.커피를 좋아한다."}},"/":{"title":"ArgoWorkflows-OSS","data":{"":"오픈소스 컨트리뷰션 아카데미의 ArgoWorkflows 프로젝트를 위한 BaseCamp","활동-개요#활동 개요":"활동 목표 : ArgoWorkflows 오픈소스 기여 및 생태계 이해\n활동 방식 : 정기적 온/오프라인 미팅 및 과제 수행","본-repo-목적#본 REPO 목적":"프로젝트 페이지 생성\n참여자 GIT 활용 트레이닝\n참여자 정보 기록\n활동 기록","why-not-support-i18n#Why not support i18n?":"Because our pages using GitHub Pages for free.\nAnd Nextra(nextjs) not support i18n for export to static site."}}}